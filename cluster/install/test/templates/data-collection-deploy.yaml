{{if false}}
# 数据收集服务部署的模板
# 用于提供负责均衡服务而定义的service
apiVersion: v1
kind: Service
metadata:
  name: {{.Values.username}}-dc
  labels:
    user: {{.Values.username}}
spec:
  selector:
    app: {{.Values.username}}-dc
    user: {{.Values.username}}
  ports:
    - port: 8000
      targetPort: 8000
      name: http
    - port: 9000
      targetPort: 9000
      name: grpc
  type: ClusterIP
---
# 部署数据收集statefulSet使用的无头服务
apiVersion: v1
kind: Service
metadata:
  name: {{.Values.username}}-dc-headless
  labels:
    user: {{.Values.username}}
spec:
  selector:
    app: {{.Values.username}}-dc
    user: {{.Values.username}}
  ports:
    - port: 8000
      targetPort: 8000
      name: http
    - port: 9000
      targetPort: 9000
      name: grpc
  type: ClusterIP
  clusterIP: None
---
# 为了使提供数据收集服务的每个pod具有稳定的网络地址，这里使用statefulSet部署
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{.Values.username}}-dc
  labels:
    app: {{.Values.username}}-dc
    user: {{.Values.username}}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{.Values.username}}-dc
      user: {{.Values.username}}
  serviceName: {{.Values.username}}-dc-headless
  template:
    metadata:
      labels:
        app: {{.Values.username}}-dc
        user: {{.Values.username}}
    spec:
      volumes:
        # 放置二进制可执行程序的中转目录
        - name: app
          emptyDir: {}
        # 为了向编译中心发出编译请求，需要使用的用户的注册信息，json形式，注册时动态创建
        - name: register-info
          configMap:
            name: {{.Values.username}}-register-info
        # 数据收集服务运行时使用的配置文件
        - name: config
          configMap:
            name: config
            items:
              - key: data-collection-config.yaml
                path: config.yaml
      # 向编译中心拉取可执行文件的客户端容器，本质上就是个grpc客户端
      initContainers:
        - name: build
          image: moyusir233/graduation-design:compilation-client
          imagePullPolicy: IfNotPresent
          # 运行需要的参数
          args:
            - -u # 用户名
            - {{.Values.username}}
            - -address #编译中心地址
            - compilation-center.production.svc.cluster.local:9000
            # 保存用户注册信息json文件的路径
            - -state
            - /etc/register-info/state.json
            - -config
            - /etc/register-info/config.json
            # 下载得到的编译文件保存的路径，保存到emptyDir对应的目录下的server文件中
            - -o
            - /app/server
            # 拉取的代码类型，dc或dp，对应数据收集服务和数据处理服务
            - -service_type
            - dc
          volumeMounts:
            # 放置编译后得到的二进制可执行程序的共享目录
            - mountPath: /app
              name: app
            # 用户的注册信息
            - mountPath: /etc/register-info
              name: register-info
      containers:
        - name: {{.Values.username}}-dc
          image: moyusir233/graduation-design:data-collection
          imagePullPolicy: IfNotPresent
          volumeMounts:
            # 存放编译后得到的二进制可执行程序的目录
            - mountPath: /app
              name: tmp
            # 应用运行所需的配置文件目录
            - mountPath: /etc/app-configs
              name: config
          # 服务运行所需的环境变量
          env:
            # 服务对象的用户id
            - name: USERNAME
              value: {{.Values.username}}
            # pod用于向kong网关注册服务时使用的名称
            - name: SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            # statefulSet使用的headless service的名称，用于给pod组建域名
            - name: HEADLESS_SERVICE_NAME
              value: {{.Values.username}}-dc-headless
            # 项目使用的域名，用于服务向网关注册路由时，增加Host请求头的匹配规则
            - name: APP_DOMAIN_NAME
              value: gd-k8s-master01
          ports:
            - containerPort: 8000
            - containerPort: 9000
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 60
            tcpSocket:
              port: 8000
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 60
            tcpSocket:
              port: 8000
      restartPolicy: Always
  {{end}}